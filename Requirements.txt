“Companies often require for meetings to be scheduled. This seems like a simple problem, but
drives many secretaries mad. Today’s workers store much of the essential data in online and open
diaries which can be used to provide mechanised support for scheduling meetings. 

In particular, users are using an online calendar which given a date and time would return the busy status of the
user. 

The business in question also maintains a database about its employees, showing for a given
employee who can represent her if unavailable. 

The database also contains the best way to contact an
employee – either email or SMS. 

The business has respective communication services that allow for
a message to be sent to an SMS or email respectively. Also, the meeting will be inserted into the
user’s calendar automatically.”
You should concentrate on a slightly simplified scenario, where meetings have exactly three
participants. If a participant is unavailable, the representative should be chosen and invited
(independent of their availability). All Users use instances of the same calendar service.
To trigger the process the secretary provides the names of three employees and a timeframe for the
meeting (2 alternative time slots).


get user busy from calendar (date and time, user)

get employee representative (returns best communication)

communication service (send communication)

insert into user's calendar 


=================================================


1) Analyse the scenario and decide on which 4 services are needed by the process described
above. Decide what interfaces are needed (each service needs one interface).
a. Draw a process diagram for your solution that shows the flow of the process as well
as the interactions with the partners. [6 marks]
b. List the interfaces of the process and service. [4 marks]
Note: this can be done on paper and scanned/ photographed or in PowerPoint. Please try to
save the design as pdf file were possible.

2) Implement the four needed partner services either as C# or Workflow services; they can all
return hardcoded or random values. (Specifically there is no need to connect to a database
here and there is no need for complex logic for this part). Keep it simple, but have four
services (or one with four interfaces) as you will need this for the next step.
[6 marks]

3) Implement the designed Meeting Scheduler Process using Windows Workflow Foundation
Workflow services. [10 marks]

4) Describe how you would deploy services to the Azure Cloud. You do not need to actually
deploy the project, but you will have to explain what steps you need to undertake to enable
the VS solution to become cloud enabled and how you would create an instance in the
cloud that allows deployment. (This does not need to include details on how to create a
cloud account; the focus is on deploying an application.)
[4 marks]

Please note: Some parts of the specification above might be imprecise – welcome to the real world!
Please make your own assumptions and fill in the gaps – just describe your assumptions in your
submissions.



Tasks

CheckAvailability - calendar
GetRepresentitive - user
SendMessage - communication
InsertUserCalendarEvent - calendar